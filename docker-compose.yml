version: "3.8"
services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  minio:
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: server /data
    ports:
      - "9000:9000"
    volumes:
      - ./docker/minio:/data
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: images
    ports:
      - "5432:5432"
    volumes:
      - ./docker/db:/var/lib/postgresql/data
  url-ingestor:
    build:
      context: .
      dockerfile: ./docker/url-ingestor.Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - rabbitmq

  image-fetcher:
    build:
      context: .
      dockerfile: ./docker/image-fetcher.Dockerfile
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_USE_SSL=false
      - MINIO_BUCKET=images
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=images
      - DB_SSLMODE=disable
    depends_on:
      - rabbitmq
      - minio
      - postgres

  image-metadata:
    build:
      context: .
      dockerfile: ./docker/image-metadata.Dockerfile
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=images
      - DB_SSLMODE=disable
    depends_on:
      - rabbitmq
      - postgres

